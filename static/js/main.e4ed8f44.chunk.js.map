{"version":3,"sources":["Components/Nav/index.js","Components/Avatar/index.js","Components/Panel/index.js","Components/TimelineEvent/index.js","Components/Timeline/index.js","Components/About/index.js","Components/Career/index.js","Components/Interests/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Link","to","Component","Avatar","href","class","src","alt","height","width","Panel","src_Components_Avatar","src_Components_Nav","TimelineEvent","props","title","body","Timeline","src_Components_TimelineEvent","About","src_Components_Timeline","Career","Interests","App","BrowserRouter","src_Components_Panel","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4ed8f44.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.scss\";\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <nav>\n        <ul className=\"listBare navList\">\n          <li className=\"padding-small navLink\">\n            <Link to=\"/about\">About me</Link>\n          </li>\n          <li className=\"padding-small navLink\">\n            <Link to=\"/career\">Career</Link>\n          </li>\n          <li className=\"padding-small navLink\">\n            <Link to=\"/interests\">Values</Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nclass Avatar extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <a href=\"/\">\n        <img\n          class=\"rounded\"\n          src=\"/resources/avatar.jpg\"\n          alt=\"profile avatar\"\n          height=\"200\"\n          width=\"200\"\n        />\n      </a>\n    );\n  }\n}\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport './index.scss';\nimport Nav from '../Nav';\nimport Avatar from '../Avatar';\n\nclass Panel extends Component {\n\n    render() {\n        return (\n            <div className=\"panel\">\n                <Avatar />\n                <Nav />\n            </div>\n        );\n    }\n}\n\nexport default Panel;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nclass TimelineEvent extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <li className=\"timelineEvent\">\n        <div>\n          <h2>{this.props.title}</h2>\n        </div>\n        <div className=\"timelineMarker\" />\n        <div>\n          <p>{this.props.body}</p>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default TimelineEvent;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport TimelineEvent from \"../TimelineEvent\";\n\nclass Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"timeline\">\n        <ul className=\"listBare timelineList\">\n          <TimelineEvent\n            title=\"My first event\"\n            body=\"Information about my first event.\"\n          />\n          <TimelineEvent\n            title=\"My second event\"\n            body=\"Information about my second event.\"\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Timeline;\n","import React, { Component } from 'react';\nimport './index.scss';\nimport Timeline from '../Timeline';\n\nclass About extends Component {\n\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Timeline />\n        );\n    }\n\n};\n\nexport default About;","import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nclass Career extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return <p>Career</p>;\n  }\n}\n\nexport default Career;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\n\nclass Interests extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return <p>Interests</p>;\n  }\n}\n\nexport default Interests;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Panel from \"./Components/Panel\";\nimport About from \"./Components/About\";\nimport Career from \"./Components/Career\";\nimport Interests from \"./Components/Interests\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Panel />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/career\" component={Career} />\n          <Route path=\"/interests\" component={Interests} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}